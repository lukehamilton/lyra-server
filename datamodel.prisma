enum Role {
  ADMIN
  USER
}

enum PostType {
  PRODUCT
  LINK
}

type User {
  id: ID! @unique @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  email: String @unique
  role: Role @default(value: USER)
  name: String!
  name_lower: String!
  firstName: String
  lastName: String
  username: String! @unique
  username_lower: String!
  headline: String
  avatar: String
  auth0id: String! @unique
  identity: String
  privateKey: String
  address: String
  followedTopics: [Topic!]! @relation(name: "FollowedTopics")
  votes: [Vote!]!
  commentVotes: [CommentVote!]!
  submittedPosts: [Post!] @relation(name: "SubmittedPosts")
  createdPosts: [Post!] @relation(name: "CreatedPosts")
  comments: [Comment!]
}

type Topic {
  id: ID! @unique @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  name: String!
  slug: String! @unique
  description: String
  image: String
  followersCount: Int
  postsCount: Int
  trending: Boolean
  posts: [Post!]! @relation(name: "PostTopics")
  followedBy: [User!]! @relation(name: "FollowedTopics")
  votes: [Vote!]!
}

type Post {
  id: ID! @unique @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  type: PostType @default(value: PRODUCT)
  name: String
  slug: String! @unique
  link: String
  thumbnail: String
  submitter: User! @relation(name: "SubmittedPosts")
  creators: [User!] @relation(name: "CreatedPosts")
  description: String
  galleryThumbs: [String!] @scalarList(strategy: RELATION)
  tagline: String
  comments: [Comment!]
  day: String
  featured: Boolean
  topics: [Topic!] @relation(name: "PostTopics")
  votes: [Vote!]
}

type Comment {
  id: ID! @unique @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  text: String!
  post: Post
  parent: Comment @relation(name: "CommentParent")
  author: User!
  replies: [Comment!] @relation(name: "CommentReplies")
  votes: [CommentVote!]
}

type CommentVote {
  id: ID! @unique @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  user: User!
  comment: Comment!
}

type Vote {
  id: ID! @unique @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  user: User!
  post: Post!
}

type Section {
  id: ID! @unique @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  date: String! @unique
  posts: [Post!]!
}

type SignedUpload {
  id: ID! @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  signedRequest: String
  url: String
}
