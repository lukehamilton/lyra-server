# import Role from "./generated/prisma.graphql"
# import Topic from "./generated/prisma.graphql"
# import Vote from "./generated/prisma.graphql"
# import CommentVote from "./generated/prisma.graphql"
# import PostType from "./generated/prisma.graphql"
# import SignedUpload from "./generated/prisma.graphql"

type Query {
  posts(first: Int, skip: Int): [Post!]!
  post(slug: String!, voterCount: Int): Post!
  topics: [Topic!]!
  userSearch(keyword: String): [User!]
  sections(first: Int, skip: Int, after: String): [Section!]!
  tokenInfo: TokenInfo
  me: User
}

type Mutation {
  authenticate(idToken: String!): User
  createTopic(name: String!, slug: String!): Topic
  createPost(
    link: String
    name: String
    tagline: String
    description: String
    thumbnail: String
    topics: [String]
    galleryThumbs: [String]
  ): Post
  createComment(postId: ID!, parentId: ID, body: String): Comment
  vote(postId: ID!): Vote!
  updateFollowedTopic(userId: ID!, topicId: ID!, following: Boolean): Topic
  mintTokens(amount: Int, address: String): Transaction
  signUpload(fileName: String, fileType: String): SignedUpload
}

type Transaction {
  hash: String
}

type TokenInfo {
  totalSupply: Int
}

type User {
  id: ID!
  email: String
  role: Role
  name: String
  firstName: String
  lastName: String
  avatar: String
  username: String
  headline: String
  identity: String
  privateKey: String
  submittedPosts: [Post!]
  createdPosts: [Post!]
  followedTopics: [Topic!]!
  votes: [Vote!]!
}

type Post {
  id: ID!
  type: PostType
  name: String
  slug: String!
  thumbnail: String
  tagline: String
  link: String
  description: String
  submitter: User
  creators: [User!]
  galleryThumbs: [String!]
  votesCount: Int
  commentsCount: Int
  comments: [Comment!]
  day: String
  featured: Boolean
  upvoted: Boolean
  topics: [Topic!]
  votes: [Vote!]
}

type Comment {
  id: ID!
  updatedAt: DateTime!
  createdAt: DateTime!
  text: String!
  post: Post
  parent: Comment
  author: User!
  replies: [Comment!]
  votesCount: Int
  votes: [CommentVote!]
}
