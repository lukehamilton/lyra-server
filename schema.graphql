enum Role {
  ADMIN
  USER
}

type Query {
  publishedPosts: [Post!]!
  post(postId: ID!): Post
  postsByUser(userId: ID!): [Post!]!
  products(first: Int, skip: Int): [Product!]!
  topics: [Topic!]!
}

type Mutation {
  createTopic(name: String!, slug: String!): Topic
  createProduct(
    name: String!
    slug: String!
    imageUrl: String!
    description: String!
    votesCount: Int
    commentsCount: Int
  ): Product
  # createProductTopic(productSlug: String!, topicSlug: String!): ProductTopic
  createUser(name: String!): User
  createDraft(title: String!, userId: ID!): Post
  publish(postId: ID!): Post
}

type Product {
  id: ID!
  name: String!
  slug: String!
  imageUrl: String!
  description: String!
  votesCount: Int!
  commentsCount: Int!
  topics: [Topic!]!
}

type Topic {
  id: ID!
  name: String!
  slug: String!
  products: [Product!]!
}

# type Product {
#   id: ID!
#   name: String!
#   slug: String!
#   imageUrl: String!
#   description: String!
#   votesCount: Int!
#   commentsCount: Int!
#   productTopics: [ProductTopic!]!
# }
#
# type Topic {
#   id: ID!
#   name: String!
#   slug: String!
#   productTopics: [ProductTopic!]!
# }
#
# type ProductTopic {
#   id: ID!
#   product: Product!
#   topic: Topic!
# }

type User {
  id: ID! @unique
  email: String @unique
  role: Role @default(value: USER)
  name: String!
  avatar: String
  auth0id: String! @unique
  identity: String
  posts: [Post!]!
}

type Post {
  id: ID!
  title: String!
  published: Boolean!
  author: User
}
